<config
        xmlns="http://software.in2p3.fr/lavoisier/config.xsd"
        xmlns:date="http://exslt.org/dates-and-times"
        xmlns:xi="http://www.w3.org/2001/XInclude"
        xmlns:str="http://exslt.org/strings"
        xmlns:e="http://software.in2p3.fr/lavoisier/entries.xsd">

    <authenticators name="AuthenticatedUsers">
        <!--<authenticator type="X509Authenticator"  authorized="view('administratorsList')/admins/admin/DN[text()=user()]"/>-->
        <authenticator type="X509Authenticator" authorized="true()"/>
    </authenticators>


    <view name="listParameters">
        <info>
            <description>list of parameters used for the forms, interfaces ...</description>
            <category>ADMIN</category>
        </info>
        <argument name="mode">light</argument>
        <connector type="XMLConnector">
            <!--<parameter name="content" eval="view('listProfilesRaw')"/>-->
            <parameter name="content" eval="new_element('root')"></parameter>
        </connector>
        <processors>
            <insert match="/root" nodes="new_element('ngis')"/>
            <insert match="/root" nodes="new_element('sites')"/>
            <insert match="/root" nodes="new_element('projects')"/>
            <insert match="/root" nodes="new_element('hosts')"/>


            <insert match="/root/ngis" nodes="view('listNgi')"/>
            <insert match="/root/sites" nodes="view('listSite')"/>
            <insert match="/root/projects" nodes="view('listProjects')"/>
            <insert match="/root/hosts" nodes="view('goc.HostList')"/>


            <replace match="/root/ngis/e:entries/e:entry/text()" nodes="concat(',',.)"/>
            <replace match="/root/sites/e:entries/e:entry/text()" nodes="concat(',',.)"/>
            <replace match="/root/projects/e:entries/e:entry/text()" nodes="concat(',',.)"/>
            <replace match="/root/hosts/e:entries/e:entry/text()" nodes="concat(',',.)"/>



            <remove match="/root/ngis/e:entries" depth="2"/>
            <remove match="/root/sites/e:entries" depth="2"/>
            <remove match="/root/projects/e:entries" depth="2"/>
            <remove match="/root/hosts/e:entries" depth="2"/>
            <remove match="/root/sf/e:entries" depth="2"/>
        </processors>
    </view>



    <view name="recomputation" authenticators="AuthenticatedUsers">
        <info>
            <description>Recomputation interface</description>
            <category>ADMIN</category>
        </info>

        <connector type="XMLConnector">
            <parameter name="content" eval="view('listParameters')"></parameter>
        </connector>

        <processors>
            <insert match="/root"
                    nodes="
                    new_attribute('admin',boolean(view('administratorsList')/admins/admin/CertDN[text()=user()]))
                    |new_attribute('user',user())
                    |new_attribute('WebmasterEmail',property('contact.email'))
                    |new_attribute('url',concat(property('server.baseUrl'),':',property('lavoisier.http.port'),'/lavoisier/form_recomputation_results?recompId='))
                    ">
            </insert>
            <insert match="/root" nodes="view('listSitesbyNgi')"/>

        </processors>
        <renderers>
            <renderer type="DefaultRenderer">
                <parameter name="template">/html/recomputation.html</parameter>
            </renderer>
            <renderer type="HTMLRenderer">
                <parameter name="template">/html/recomputation.html</parameter>
            </renderer>
        </renderers>

    </view>


    <view name="administratorsList" authenticators="AuthenticatedUsers">
        <info>
            <description>List of admin static</description>
            <category>ADMIN</category>
        </info>
        <connector type="FileConnector">
            <parameter name="path">/xml/administrators.xml</parameter>
        </connector>
        <processors>


        </processors>

        <renderers>
            <renderer type="DefaultRenderer">
                <parameter name="template">/html/admin.html</parameter>
            </renderer>
            <renderer type="HTMLRenderer">
                <parameter name="template">/html/admin.html</parameter>
            </renderer>
        </renderers>


    </view>

    <view name="post_profile">


        <info>
            <description>list of parameters treated from the profile form</description>
            <category>Hidden</category>
        </info>


        <connector type="XMLConnector">
            <parameter name="content" eval="view_post('format_post', post())/e:entries"/>
        </connector>

        <renderers>
            <renderer type="JSONRenderer">
                <parameter name="text_as_pair">false</parameter>
            </renderer>
        </renderers>
    </view>

    <view name="format_post">
        <info>
            <description>list of parameters posted from the profile form</description>
            <category>Hidden</category>
        </info>
        <connector type="XMLConnector">
            <parameter name="content" eval="post()"/>
        </connector>
        <processors>

            <!--<insert match="/e:entries[*]" nodes="new_element('groups')"></insert>-->
            <!--<insert match="/e:entries[*]/groups" nodes="ancestor::e:entries/e:entry[contains(@key,'group')]"></insert>-->
            <!--<remove match="/e:entries/e:entry[contains(@key,'group')]"/>-->
            <!--<replace match="/e:entries//e:entry[text()]" nodes="new_element(match()/@key,new_text(match()/text()))"></replace>-->
            <!--<replace nodes="/*/*/text()" ><node value="concat('&amp;', @key, '=', .)"/></replace>-->

        </processors>
    </view>





    <view name="recomputationInfo" authenticators="AuthenticatedUsers">
        <info>
            <category>Recomputation</category>
            <description>Check a given recomputation</description>
        </info>


        <argument name="recompId">0</argument>
        <connector type="FileConnector">
            <parameter name="path" eval="concat(property('cache.baseDirectory'),'form_recomputation_results/',$recompId)"></parameter>
        </connector>

        <processors>
            <element in="entries">
                <attribute-create out="mode">history</attribute-create>
                <attribute-create out="user">user()</attribute-create>
                <attribute-create out="admin">boolean(view('administratorsList')/admins/admin/CertDN[text()=user()])</attribute-create>
            </element>
        </processors>
        <renderers>
            <renderer type="DefaultRenderer">
                <parameter name="template">/html/recomp_res.html</parameter>
            </renderer>
            <renderer type="HTMLRenderer">
                <parameter name="template">/html/recomp_res.html</parameter>
            </renderer>
        </renderers>

    </view>

    <view name="form_recomputation_results">
        <info>
            <category>Hidden</category>
        </info>

        <argument name="recompId">0</argument>
        <argument name="key">0</argument>


        <connector type="RotatingCacheConnector">
            <parameter name="content" eval="view_post('form_recomputation_results_INTERNAL',choose(post(false()),post(false()),entries()))"/>
            <parameter name="key" eval="$recompId"/>
            <parameter name="size">100</parameter>
        </connector>


        <renderers>
            <renderer type="DefaultRenderer">
                <parameter name="template">/html/recomp_res.html</parameter>
            </renderer>
            <renderer type="HTMLRenderer">
                <parameter name="template">/html/recomp_res.html</parameter>
            </renderer>
        </renderers>


    </view>

    <view name="form_recomputation_results_INTERNAL" xmlns:str="http://exslt.org/strings"
          xmlns:e="http://software.in2p3.fr/lavoisier/entries.xsd">
        <info>
            <category>ADMIN</category>
            <description>Build your AR data</description>
        </info>



        <connector type="HTTPConnector">
            <parameter name="method">POST</parameter>
            <parameter name="url">https://operations-portal.egi.eu/cron/sendEmail</parameter>
            <parameter name="post" eval="post()"></parameter>
            <parameter name="certificate" eval="property('certificate.path')"/>
            <parameter name="passphrase" eval="property('certificate.password')"/>
            <parameter name="force-redirect">true</parameter>
        </connector>



        <serializer type="EncapsulateSerializer"></serializer>

        <processors>
            <element in="e:entries">
                <element-create>post()</element-create>
            </element>



            <element in="e:entries">
                <element in="e:entries">
                    <element-create>entry('RequestDate',substring-after(substring-before(../../e:entry/text(),'&lt;/entry'),'key="Request date"&gt;'))</element-create>
                    <element-create>entry('status',substring-before(substring-after(../../e:entry/text(),'key="status"&gt;'),'&lt;/entry'))</element-create>

                </element>
            </element>

            <element in="e:entries" out="entries">

            </element>

            <element in="entries">
                <element in="e:entries" out="entries">

                </element>
                <element-ignore in="entry"></element-ignore>
            </element>

            <elements path="entries/entries">
                <element in="e:entry" out="entry"></element>
            </elements>



        </processors>


    </view>

    <view name="form_profile_results_INTERNAL" xmlns:str="http://exslt.org/strings"
          xmlns:e="http://software.in2p3.fr/lavoisier/entries.xsd">
        <info>
            <category>ADMIN</category>
            <description>Build your AR data</description>
        </info>

        <connector type="XMLConnector">
            <parameter name="content" eval="view_post('format_post', post()) "/>

            <!--<parameter name="url">https://operations-portal.egi.eu/cron/sendEmail</parameter>-->
            <!--<parameter name="certificate" eval="property('certificate.path')"/>-->
            <!--<parameter name="passphrase" eval="property('certificate.password')"/>-->
        </connector>

        <renderers>
            <renderer type="DefaultRenderer">
                <parameter name="template">/html/profile_res.html</parameter>
            </renderer>
            <renderer type="HTMLRenderer">
                <parameter name="template">/html/profile_res.html</parameter>
            </renderer>
        </renderers>

    </view>

    <view xmlns:e="http://software.in2p3.fr/lavoisier/entries.xsd" name="listProfiles"
          authenticators="AuthenticatedUsers">
        <info>
            <description>List of Profile html</description>
            <category>Profile</category>
        </info>

        <connector type="XMLConnector">
            <parameter name="content" eval="view('aggregation_profiles')"></parameter>
        </connector>

        <processors>
            <insert match="/object"
                    nodes="new_attribute('admin',boolean(view('administratorsList')/admins/admin/CertDN[text()=user()]))
                     |new_attribute('user',user())">
            </insert>
        </processors>


        <renderers>

            <renderer type="DefaultRenderer">
                <parameter name="template">/html/profiles.html</parameter>
            </renderer>
            <renderer type="HTMLRenderer">
                <parameter name="template">/html/profiles.html</parameter>
            </renderer>
        </renderers>


    </view>
    <view xmlns:e="http://software.in2p3.fr/lavoisier/entries.xsd" name="CreationProfiles"
          authenticators="AuthenticatedUsers">
        <info>
            <description>creation of Profile</description>
            <category>ADMIN</category>
        </info>

        <connector type="XMLConnector">
            <parameter name="content" eval="view('goc.ServiceFlavours')"></parameter>
        </connector>

        <processors>
            <insert match="/results"
                    nodes="new_attribute('admin',boolean(view('administratorsList')/admins/admin/CertDN[text()=user()]))
                     |new_attribute('user',user())">
            </insert>
            <!--<element in="results">-->
            <!--<element-create>view('poems')</element-create>-->
            <!--</element>-->
        </processors>


        <renderers>
            <renderer type="DefaultRenderer">
                <parameter name="template">/html/profiles_creation.html</parameter>
            </renderer>
            <renderer type="HTMLRenderer">
                <parameter name="template">/html/profiles_creation.html</parameter>
            </renderer>
        </renderers>

    </view>

    <view xmlns:e="http://software.in2p3.fr/lavoisier/entries.xsd" name="updateProfile"
          authenticators="AuthenticatedUsers">
        <info>
            <description>creation of Profile</description>
            <category>ADMIN</category>
        </info>

        <argument name="profileId"></argument>
        <connector type="XMLConnector">
            <parameter name="content" eval="view('goc.ServiceFlavours')"></parameter>
        </connector>

        <processors>
            <insert match="/results"
                    nodes="new_attribute('admin',boolean(view('administratorsList')/admins/admin/CertDN[text()=user()]))
                     |new_attribute('user',user())">
            </insert>

            <element in="results">
                <attribute-create out="mode">'edition'</attribute-create>
                <element-create>view('aggregation_profiles')/object/data/item/object[@id=$profileId]</element-create>
            </element>
        </processors>


        <renderers>
            <renderer type="DefaultRenderer">
                <parameter name="template">/html/profiles_creation.html</parameter>
            </renderer>
            <renderer type="HTMLRenderer">
                <parameter name="template">/html/profiles_creation.html</parameter>
            </renderer>
        </renderers>

    </view>




    <view name="profileDeletion">
        <info>
            <category>ADMIN</category>
            <description>Delete a profile</description>
        </info>
        <argument name="profileId"></argument>
        <connector type="HTTPConnector">
            <parameter name="url" eval="concat(property('api.aggregation_profiles'),'/',$profileId)"></parameter>
            <parameter name="method">DELETE</parameter>
            <parameter name="certificate" eval="property('certificate.path')"/>
            <parameter name="passphrase" eval="property('certificate.password')"/>
            <parameter name="force-redirect">true</parameter>

            <parameter name="header">
                <entry key="x-api-key" eval="property('argo.api.key')"></entry>
                <entry key="Accept">application/xml</entry>
            </parameter>
        </connector>


        <processors>
            <element>
                <element-create>view('triggerProfileList')/null</element-create>
            </element>
        </processors>
        <renderers>
            <renderer type="DefaultRenderer">
                <parameter name="template">/html/message.html</parameter>
            </renderer>
            <renderer type="HTMLRenderer">
                <parameter name="template">/html/message.html</parameter>
            </renderer>
        </renderers>
    </view>

    <view name="profileUpdate">
        <info>
            <category>ADMIN</category>
            <description>Delete a profile</description>
        </info>
        <argument name="id"></argument>
        <argument name="json"></argument>


        <connector type="HTTPConnector">
            <parameter name="url" eval="concat(property('api.aggregation_profiles'),'/',$id)"></parameter>
            <parameter name="method">PUT</parameter>
            <parameter name="certificate" eval="property('certificate.path')"/>
            <parameter name="passphrase" eval="property('certificate.password')"/>
            <parameter name="post" eval="$json"></parameter>
            <parameter name="force-redirect">true</parameter>
            <parameter name="header">
                <entry key="x-api-key" eval="property('argo.api.key')"></entry>
                <entry key="Content-Type">application/json</entry>
            </parameter>
        </connector>

        <processors>
            <element>
                <element-create>view('triggerProfileList')/null</element-create>
            </element>
        </processors>


        <renderers>
            <renderer type="DefaultRenderer">
                <parameter name="template">/html/message.html</parameter>
            </renderer>
            <renderer type="HTMLRenderer">
                <parameter name="template">/html/message.html</parameter>
            </renderer>
        </renderers>


    </view>

    <view name="profileAddition">
        <info>
            <category>ADMIN</category>
            <description>Delete a profile</description>
        </info>
        <argument name="json"></argument>


        <connector type="HTTPConnector">
            <parameter name="url" eval="property('api.aggregation_profiles')"></parameter>
            <parameter name="method">POST</parameter>
            <parameter name="certificate" eval="property('certificate.path')"/>
            <parameter name="passphrase" eval="property('certificate.password')"/>
            <parameter name="post" eval="$json"></parameter>
            <parameter name="force-redirect">true</parameter>
            <parameter name="header">
                <entry key="x-api-key" eval="property('argo.api.key')"></entry>
                <entry key="Content-Type">application/json</entry>
            </parameter>
        </connector>

        <processors>
            <element>
                <element-create>view('triggerProfileList')/null</element-create>
            </element>
        </processors>


        <renderers>
            <renderer type="DefaultRenderer">
                <parameter name="template">/html/message.html</parameter>
            </renderer>
            <renderer type="HTMLRenderer">
                <parameter name="template">/html/message.html</parameter>
            </renderer>
        </renderers>


    </view>


</config>